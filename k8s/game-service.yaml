apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-service
  namespace: lugx-gaming
  labels:
    app: game-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: game-service
  template:
    metadata:
      labels:
        app: game-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/api/v1/health"
    spec:
      containers:
        - name: game-service
          image: lugx-game-service:latest
          imagePullPolicy: Never
          ports:
            - containerPort: 8080
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: external-services-config
                  key: POSTGRES_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: external-services-config
                  key: POSTGRES_PORT
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: external-db-secrets
                  key: postgres-user
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: external-db-secrets
                  key: postgres-password
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: external-services-config
                  key: POSTGRES_DB
            - name: DB_SSLMODE
              valueFrom:
                configMapKeyRef:
                  name: external-services-config
                  key: POSTGRES_SSLMODE
            - name: PORT
              value: "8080"
            - name: GIN_MODE
              value: "release"
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          livenessProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/v1/health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.35
          command:
            [
              "sh",
              "-c",
              "until nc -z $POSTGRES_HOST $POSTGRES_PORT; do echo waiting for postgres; sleep 2; done;",
            ]
          env:
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: external-services-config
                  key: POSTGRES_HOST
            - name: POSTGRES_PORT
              valueFrom:
                configMapKeyRef:
                  name: external-services-config
                  key: POSTGRES_PORT
---
apiVersion: v1
kind: Service
metadata:
  name: game-service
  namespace: lugx-gaming
  labels:
    app: game-service
spec:
  selector:
    app: game-service
  ports:
    - port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: game-service-external
  namespace: lugx-gaming
  labels:
    app: game-service
spec:
  selector:
    app: game-service
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
  type: NodePort
